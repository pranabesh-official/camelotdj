name: Build and Test

on:
  push:
    branches: [ main, staging, develop ]
  pull_request:
    branches: [ main, staging ]

env:
  NODE_VERSION: '18'
  PYTHON_VERSION: '3.9'

jobs:
  test-macos:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Install Node.js dependencies
      run: |
        npm install
        npm rebuild
        
    - name: Lint TypeScript
      run: npm run lint
      
    - name: Test Python backend
      run: |
        cd python
        python test_usb_storage.py
        
    - name: Build Python backend
      run: npm run python-build
      
    - name: Build React frontend
      run: npm run react-build
      
    - name: Build Electron main process
      run: tsc -p tsconfig.electronMain.json
      
    - name: Test macOS build (ARM64)
      run: |
        cross-env npm_config_arch=arm64 ELECTRON_BUILDER_ARCH=arm64 electron-builder --mac --arm64 --dir
        
    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      with:
        name: test-build-macos
        path: dist/mac-arm64/
        retention-days: 7

  test-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Install Node.js dependencies
      run: |
        npm install
        npm rebuild
        
    - name: Lint TypeScript
      run: npm run lint
      
    - name: Test Python backend
      run: |
        cd python
        python test_usb_storage.py
        
    - name: Build Python backend
      run: npm run python-build
      
    - name: Build React frontend
      run: npm run react-build
      
    - name: Build Electron main process
      run: tsc -p tsconfig.electronMain.json
      
    - name: Test Windows build (x64)
      run: |
        $env:npm_config_arch="x64"
        $env:ELECTRON_BUILDER_ARCH="x64"
        npx electron-builder --win --x64 --dir
        
    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      with:
        name: test-build-windows
        path: dist/win-x64/
        retention-days: 7

  test-linux:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libasound2-dev libgtk-3-dev libx11-xcb-dev libxss1 libgconf-2-4
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Install Node.js dependencies
      run: |
        npm install
        npm rebuild
        
    - name: Lint TypeScript
      run: npm run lint
      
    - name: Test Python backend
      run: |
        cd python
        python test_usb_storage.py
        
    - name: Build Python backend
      run: npm run python-build
      
    - name: Build React frontend
      run: npm run react-build
      
    - name: Build Electron main process
      run: tsc -p tsconfig.electronMain.json
      
    - name: Test Linux build
      run: |
        npx electron-builder --linux --dir
        
    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      with:
        name: test-build-linux
        path: dist/linux-unpacked/
        retention-days: 7
